{"version":3,"file":"index.f367523b.js","sources":["../../vite/modulepreload-polyfill","../../src/app/components/CheckboxButton.tsx","../../src/app/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import React, { PropsWithChildren } from 'react';\nimport './style.scss';\n\nexport function CheckboxButton({\n  children,\n  isSelected,\n  onClick\n}: PropsWithChildren<{ isSelected?: boolean; onClick?: () => void }>) {\n  return (\n    <div className={`ChecboxButton ${isSelected && 'isSelected'}`} onClick={onClick}>\n      {children}\n    </div>\n  );\n}\n","import { CheckboxButton } from '@app/components/CheckboxButton';\nimport { AppShell, Button, Center, Group, Space, Title } from '@mantine/core';\nimport { useNotifications } from '@mantine/notifications';\nimport { doc, getFirestore, onSnapshot, setDoc } from 'firebase/firestore';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const db = useMemo(() => getFirestore(), []);\n  const possibleActivitiesRef = useMemo(() => doc(db, 'activities', 'possibleActivities'), [db]);\n  const activitiesSelectedRef = useMemo(() => doc(db, 'activities', 'activitiesSelected'), [db]);\n  const [possibleActivities, setPossibleActivities] = useState<string[]>([]);\n  const [activitiesSelected, setActivitiesSelected] = useState<string[]>([]);\n  const notifications = useNotifications();\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(possibleActivitiesRef, (doc) => {\n      setPossibleActivities(doc.data()?.value);\n    });\n\n    return () => unsubscribe();\n  }, [possibleActivitiesRef]);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(activitiesSelectedRef, (doc) => {\n      setActivitiesSelected(doc.data()?.value);\n    });\n\n    return () => unsubscribe();\n  }, [activitiesSelectedRef]);\n\n  const toggleActivity = (activity: string) => {\n    if (activitiesSelected.includes(activity)) {\n      setActivitiesSelected(activitiesSelected.filter((item) => item !== activity));\n    } else if (activitiesSelected.length < 2) {\n      setActivitiesSelected([...activitiesSelected, activity]);\n    }\n  };\n\n  const onSubmit = async () => {\n    await setDoc(activitiesSelectedRef, { value: activitiesSelected });\n    notifications.showNotification({\n      title: \"C'est good\",\n      message: 'Les activités ont bien été enregistrées'\n    });\n  };\n\n  return (\n    <AppShell\n      fixed\n      styles={(theme) => ({\n        main: {\n          backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0],\n          display: 'flex',\n          flexDirection: 'column',\n          paddingLeft: 0\n        }\n      })}\n    >\n      <Center style={{ padding: 20 }}>\n        <Group direction=\"column\" grow>\n          <Title order={2}>Wesh cousin, choisis 2 activités qu&apos;on ira faire avec toi</Title>\n          {possibleActivities.map((item) => (\n            <CheckboxButton\n              key={item}\n              isSelected={activitiesSelected.includes(item)}\n              onClick={() => toggleActivity(item)}\n            >\n              {item}\n            </CheckboxButton>\n          ))}\n          <Space />\n          <Button size=\"lg\" onClick={onSubmit}>\n            Valider\n          </Button>\n        </Group>\n      </Center>\n    </AppShell>\n  );\n}\n\nexport default App;\n","import App from '@app/App';\nimport { MantineProvider, TypographyStylesProvider } from '@mantine/core';\nimport { NotificationsProvider } from '@mantine/notifications';\nimport { initializeApp } from 'firebase/app';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCMIk653Cbvxy8sprAFFSEnR0VyBBJ3lps',\n  authDomain: 'anniv-tonton.firebaseapp.com',\n  projectId: 'anniv-tonton',\n  storageBucket: 'anniv-tonton.appspot.com',\n  messagingSenderId: '118446865248',\n  appId: '1:118446865248:web:68c8fc0fd594be536bbc05'\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <MantineProvider theme={{ colorScheme: 'dark', primaryColor: 'cyan' }}>\n      <TypographyStylesProvider>\n        <NotificationsProvider>\n          <App />\n        </NotificationsProvider>\n      </TypographyStylesProvider>\n    </MantineProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"names":["children","isSelected","onClick","db","useMemo","getFirestore","possibleActivitiesRef","doc","activitiesSelectedRef","possibleActivities","setPossibleActivities","useState","activitiesSelected","setActivitiesSelected","notifications","useNotifications","unsubscribe","onSnapshot","data","value","toggleActivity","activity","includes","filter","item","length","onSubmit","setDoc","showNotification","title","message","theme","main","backgroundColor","colorScheme","colors","dark","gray","display","flexDirection","paddingLeft","padding","map","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","primaryColor","document","getElementById"],"mappings":"8KAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,eCvCS,CAC7BA,WACAC,aACAC,WACoE,iBAE7D,UAAY,iBAAgBD,GAAc,eAAgB,uBCFnE,YAAe,MACPE,GAAKC,kBAAQ,IAAMC,IAAgB,IACnCC,EAAwBF,kBAAQ,IAAMG,EAAIJ,EAAI,aAAc,sBAAuB,CAACA,IACpFK,EAAwBJ,kBAAQ,IAAMG,EAAIJ,EAAI,aAAc,sBAAuB,CAACA,IACpF,CAACM,EAAoBC,GAAyBC,mBAAmB,IACjE,CAACC,EAAoBC,GAAyBF,mBAAmB,IACjEG,EAAgBC,wBAEZ,IAAM,MACRC,GAAcC,EAAWX,EAAwBC,GAAQ,SACvCA,KAAIW,SAAJX,cAAYY,eAG7B,IAAMH,KACZ,CAACV,wBAEM,IAAM,MACRU,GAAcC,EAAWT,EAAwBD,GAAQ,SACvCA,KAAIW,SAAJX,cAAYY,eAG7B,IAAMH,KACZ,CAACR,SAEEY,GAAiB,AAACC,GAAqB,CACvCT,EAAmBU,SAASD,KACRT,EAAmBW,OAAQC,GAASA,IAASH,IAC1DT,EAAmBa,OAAS,KACf,CAAC,GAAGb,EAAoBS,KAI5CK,EAAW,SAAY,MACrBC,GAAOnB,EAAuB,CAAEW,MAAOP,MAC/BgB,iBAAiB,CAC7BC,MAAO,aACPC,QAAS,kEAKV,GACC,SACA,OAASC,KACPC,KAAM,CACJC,gBAAiBF,EAAMG,cAAgB,OAASH,EAAMI,OAAOC,KAAK,GAAKL,EAAMI,OAAOE,KAAK,GACzFC,QAAS,OACTC,cAAe,SACfC,YAAa,gBAIhB,GAAO,MAAO,CAAEC,QAAS,eACvB,GAAM,UAAU,SAAS,oBACvB,GAAM,MAAO,4EACbhC,EAAmBiC,IAAKlB,KACtB,GAEC,WAAYZ,EAAmBU,SAASE,GACxC,QAAS,IAAMJ,EAAeI,YAE7BA,GAJIA,MAOR,QACA,GAAO,KAAK,KAAK,QAASE,8BC/DrC,KAAMiB,GAAiB,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,6CAITC,EAAcP,GAEdQ,EAASC,SACN,EAAM,uBACJ,GAAgB,MAAO,CAAElB,YAAa,OAAQmB,aAAc,mBAC1D,cACE,cACE,cAKTC,SAASC,eAAe"}